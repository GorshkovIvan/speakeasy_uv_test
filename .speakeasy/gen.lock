lockVersion: 2.0.0
id: 5d183c90-a938-4938-82c5-193acee86bf7
management:
  docChecksum: 0a12d360ad302f1b31cf3e896bf9a61b
  docVersion: 1.0.0
  speakeasyVersion: 0.0.1
  generationVersion: 2.673.2
  releaseVersion: 0.0.3
  configChecksum: 00e794a37d0046b58ce1f2d8d247cae1
features:
  python:
    additionalDependencies: 1.0.0
    constsAndDefaults: 1.0.5
    core: 5.19.6
    defaultEnabledRetries: 0.2.0
    devContainers: 3.0.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.3.2
    flatRequests: 1.0.1
    flattening: 3.1.1
    globalSecurity: 3.0.3
    globalSecurityCallbacks: 1.0.0
    globalSecurityFlattening: 1.0.0
    globalServerURLs: 3.1.1
    methodArguments: 1.0.2
    mockServer: 0.1.1
    responseFormat: 1.0.1
    retries: 3.0.2
    sdkHooks: 1.1.0
    tests: 1.19.2
    uploadStreams: 1.0.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .vscode/settings.json
  - USAGE.md
  - docs/errors/apierrorinvalidinput.md
  - docs/errors/apierrornotfound.md
  - docs/errors/apierrorunauthorized.md
  - docs/models/apiresponse.md
  - docs/models/category.md
  - docs/models/deleteorderrequest.md
  - docs/models/deletepetrequest.md
  - docs/models/deleteuserrequest.md
  - docs/models/findpetsbystatusrequest.md
  - docs/models/findpetsbystatusstatus.md
  - docs/models/findpetsbytagsrequest.md
  - docs/models/getorderbyidrequest.md
  - docs/models/getpetbyidrequest.md
  - docs/models/getuserbynamerequest.md
  - docs/models/loginuserrequest.md
  - docs/models/loginuserresponse.md
  - docs/models/order.md
  - docs/models/orderstatus.md
  - docs/models/pet.md
  - docs/models/petstatus.md
  - docs/models/security.md
  - docs/models/tag.md
  - docs/models/updateuserrequest.md
  - docs/models/uploadfilerequest.md
  - docs/models/user.md
  - docs/models/utils/retryconfig.md
  - docs/sdks/petsdk/README.md
  - docs/sdks/petstore/README.md
  - docs/sdks/store/README.md
  - docs/sdks/usersdk/README.md
  - py.typed
  - pylintrc
  - pyproject.toml
  - scripts/publish.sh
  - src/petstore/__init__.py
  - src/petstore/_hooks/__init__.py
  - src/petstore/_hooks/sdkhooks.py
  - src/petstore/_hooks/types.py
  - src/petstore/_version.py
  - src/petstore/basesdk.py
  - src/petstore/errors/__init__.py
  - src/petstore/errors/apierror.py
  - src/petstore/errors/apierrorinvalidinput.py
  - src/petstore/errors/apierrornotfound.py
  - src/petstore/errors/apierrorunauthorized.py
  - src/petstore/errors/no_response_error.py
  - src/petstore/errors/petstoreerror.py
  - src/petstore/errors/responsevalidationerror.py
  - src/petstore/httpclient.py
  - src/petstore/models/__init__.py
  - src/petstore/models/apiresponse.py
  - src/petstore/models/category.py
  - src/petstore/models/deleteorderop.py
  - src/petstore/models/deletepetop.py
  - src/petstore/models/deleteuserop.py
  - src/petstore/models/findpetsbystatusop.py
  - src/petstore/models/findpetsbytagsop.py
  - src/petstore/models/getorderbyidop.py
  - src/petstore/models/getpetbyidop.py
  - src/petstore/models/getuserbynameop.py
  - src/petstore/models/loginuserop.py
  - src/petstore/models/order.py
  - src/petstore/models/pet.py
  - src/petstore/models/security.py
  - src/petstore/models/tag.py
  - src/petstore/models/updateuserop.py
  - src/petstore/models/uploadfileop.py
  - src/petstore/models/user.py
  - src/petstore/pet_sdk.py
  - src/petstore/py.typed
  - src/petstore/sdk.py
  - src/petstore/sdkconfiguration.py
  - src/petstore/store.py
  - src/petstore/types/__init__.py
  - src/petstore/types/basemodel.py
  - src/petstore/user_sdk.py
  - src/petstore/utils/__init__.py
  - src/petstore/utils/annotations.py
  - src/petstore/utils/datetimes.py
  - src/petstore/utils/enums.py
  - src/petstore/utils/eventstreaming.py
  - src/petstore/utils/forms.py
  - src/petstore/utils/headers.py
  - src/petstore/utils/logger.py
  - src/petstore/utils/metadata.py
  - src/petstore/utils/queryparams.py
  - src/petstore/utils/requestbodies.py
  - src/petstore/utils/retries.py
  - src/petstore/utils/security.py
  - src/petstore/utils/serializers.py
  - src/petstore/utils/unmarshal_json_response.py
  - src/petstore/utils/url.py
  - src/petstore/utils/values.py
  - tests/__init__.py
  - tests/mockserver/.gitignore
  - tests/mockserver/Dockerfile
  - tests/mockserver/Makefile
  - tests/mockserver/README.md
  - tests/mockserver/go.mod
  - tests/mockserver/go.sum
  - tests/mockserver/internal/handler/assert/contenttype.go
  - tests/mockserver/internal/handler/assert/header.go
  - tests/mockserver/internal/handler/assert/parameter.go
  - tests/mockserver/internal/handler/assert/pointer.go
  - tests/mockserver/internal/handler/assert/security.go
  - tests/mockserver/internal/handler/doc.go
  - tests/mockserver/internal/handler/generated_handler.go
  - tests/mockserver/internal/handler/generated_handlers.go
  - tests/mockserver/internal/handler/pathdeletepetpetid.go
  - tests/mockserver/internal/handler/pathdeletestoreorderorderid.go
  - tests/mockserver/internal/handler/pathdeleteuserusername.go
  - tests/mockserver/internal/handler/pathgetpetfindbystatus.go
  - tests/mockserver/internal/handler/pathgetpetfindbytags.go
  - tests/mockserver/internal/handler/pathgetpetpetid.go
  - tests/mockserver/internal/handler/pathgetstoreinventory.go
  - tests/mockserver/internal/handler/pathgetstoreorderorderid.go
  - tests/mockserver/internal/handler/pathgetuserlogin.go
  - tests/mockserver/internal/handler/pathgetuserusername.go
  - tests/mockserver/internal/handler/pathpostpet.go
  - tests/mockserver/internal/handler/pathpostpetpetiduploadimage.go
  - tests/mockserver/internal/handler/pathpoststoreorder.go
  - tests/mockserver/internal/handler/pathpostuser.go
  - tests/mockserver/internal/handler/pathpostusercreatewithlist.go
  - tests/mockserver/internal/handler/pathputpet.go
  - tests/mockserver/internal/handler/values/files.go
  - tests/mockserver/internal/logging/doc.go
  - tests/mockserver/internal/logging/formats.go
  - tests/mockserver/internal/logging/http_file.go
  - tests/mockserver/internal/logging/http_logger.go
  - tests/mockserver/internal/logging/levels.go
  - tests/mockserver/internal/logging/logger.go
  - tests/mockserver/internal/logging/oas_operation.go
  - tests/mockserver/internal/logging/oas_operation_call.go
  - tests/mockserver/internal/sdk/models/components/apiresponse.go
  - tests/mockserver/internal/sdk/models/components/category.go
  - tests/mockserver/internal/sdk/models/components/httpmetadata.go
  - tests/mockserver/internal/sdk/models/components/order.go
  - tests/mockserver/internal/sdk/models/components/pet.go
  - tests/mockserver/internal/sdk/models/components/security.go
  - tests/mockserver/internal/sdk/models/components/tag.go
  - tests/mockserver/internal/sdk/models/components/user.go
  - tests/mockserver/internal/sdk/models/operations/addpet.go
  - tests/mockserver/internal/sdk/models/operations/createuser.go
  - tests/mockserver/internal/sdk/models/operations/createuserswithlistinput.go
  - tests/mockserver/internal/sdk/models/operations/deleteorder.go
  - tests/mockserver/internal/sdk/models/operations/deletepet.go
  - tests/mockserver/internal/sdk/models/operations/deleteuser.go
  - tests/mockserver/internal/sdk/models/operations/findpetsbystatus.go
  - tests/mockserver/internal/sdk/models/operations/findpetsbytags.go
  - tests/mockserver/internal/sdk/models/operations/getinventory.go
  - tests/mockserver/internal/sdk/models/operations/getorderbyid.go
  - tests/mockserver/internal/sdk/models/operations/getpetbyid.go
  - tests/mockserver/internal/sdk/models/operations/getuserbyname.go
  - tests/mockserver/internal/sdk/models/operations/loginuser.go
  - tests/mockserver/internal/sdk/models/operations/logoutuser.go
  - tests/mockserver/internal/sdk/models/operations/placeorder.go
  - tests/mockserver/internal/sdk/models/operations/updatepet.go
  - tests/mockserver/internal/sdk/models/operations/updateuser.go
  - tests/mockserver/internal/sdk/models/operations/uploadfile.go
  - tests/mockserver/internal/sdk/models/sdkerrors/apierrorinvalidinput.go
  - tests/mockserver/internal/sdk/models/sdkerrors/apierrornotfound.go
  - tests/mockserver/internal/sdk/models/sdkerrors/apierrorunauthorized.go
  - tests/mockserver/internal/sdk/types/bigint.go
  - tests/mockserver/internal/sdk/types/date.go
  - tests/mockserver/internal/sdk/types/datetime.go
  - tests/mockserver/internal/sdk/types/decimal.go
  - tests/mockserver/internal/sdk/types/jsonl/jsonl.go
  - tests/mockserver/internal/sdk/types/pointers.go
  - tests/mockserver/internal/sdk/utils/json.go
  - tests/mockserver/internal/sdk/utils/reflect.go
  - tests/mockserver/internal/sdk/utils/sort.go
  - tests/mockserver/internal/server/doc.go
  - tests/mockserver/internal/server/generated_handlers.go
  - tests/mockserver/internal/server/internal_handlers.go
  - tests/mockserver/internal/server/server.go
  - tests/mockserver/internal/server/server_option.go
  - tests/mockserver/internal/server/templates/log/index.html.tmpl
  - tests/mockserver/internal/server/templates/log/operation.html.tmpl
  - tests/mockserver/internal/server/templates/log/style.css.tmpl
  - tests/mockserver/internal/tracking/requesttracker.go
  - tests/mockserver/main.go
  - tests/test_client.py
  - tests/test_pet_sdk.py
  - tests/test_store.py
  - tests/test_user_sdk.py
examples:
  updatePet:
    speakeasy-default-update-pet:
      requestBody:
        application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value 1>"]}
      responses:
        "200":
          application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": []}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  addPet:
    speakeasy-default-add-pet:
      requestBody:
        application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value 1>", "<value 2>", "<value 3>"]}
      responses:
        "200":
          application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value 1>"]}
  findPetsByStatus:
    speakeasy-default-find-pets-by-status:
      parameters:
        query:
          status: "available"
      responses:
        "200":
          application/json: [{"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value 1>", "<value 2>"]}]
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  findPetsByTags:
    speakeasy-default-find-pets-by-tags:
      responses:
        "200":
          application/json: [{"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": []}]
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  getPetById:
    speakeasy-default-get-pet-by-id:
      parameters:
        path:
          petId: 311674
      responses:
        "200":
          application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["<value 1>"]}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  deletePet:
    speakeasy-default-delete-pet:
      parameters:
        path:
          petId: 818965
      responses:
        "200":
          application/json: {"id": 10, "name": "doggie", "category": {"id": 1, "name": "Dogs"}, "photoUrls": []}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  uploadFile:
    speakeasy-default-upload-file:
      parameters:
        path:
          petId: 150516
      responses:
        "200":
          application/json: {}
  getInventory:
    speakeasy-default-get-inventory:
      responses:
        "200":
          application/json: {"key": 111959, "key1": 333452, "key2": 973245}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  placeOrder:
    speakeasy-default-place-order:
      requestBody:
        application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
      responses:
        "200":
          application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  getOrderById:
    speakeasy-default-get-order-by-id:
      parameters:
        path:
          orderId: 728529
      responses:
        "200":
          application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  deleteOrder:
    speakeasy-default-delete-order:
      parameters:
        path:
          orderId: 690575
      responses:
        "200":
          application/json: {"id": 10, "petId": 198772, "quantity": 7, "status": "approved"}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  createUser:
    speakeasy-default-create-user:
      requestBody:
        application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
  createUsersWithListInput:
    speakeasy-default-create-users-with-list-input:
      requestBody:
        application/json: [{"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}]
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
  loginUser:
    speakeasy-default-login-user:
      responses:
        "200":
          application/json: "<value>"
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  logoutUser: {}
  getUserByName:
    speakeasy-default-get-user-by-name:
      parameters:
        path:
          username: "Edyth10"
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
  updateUser:
    speakeasy-default-update-user:
      parameters:
        path:
          username: "<value>"
      requestBody:
        application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
  deleteUser:
    speakeasy-default-delete-user:
      parameters:
        path:
          username: "Rita_Schuppe"
      responses:
        "200":
          application/json: {"id": 10, "username": "theUser", "firstName": "John", "lastName": "James", "email": "john@email.com", "password": "12345", "phone": "12345", "userStatus": 1}
        "400":
          application/json: {"status": 400, "error": "Bad request"}
        "401":
          application/json: {"status": 401, "error": "Unauthorized"}
        "404":
          application/json: {"status": 404, "error": "Not Found", "code": "object_not_found"}
examplesVersion: 1.0.2
generatedTests:
  updatePet: "2025-08-07T13:20:03+01:00"
  addPet: "2025-08-07T13:20:03+01:00"
  findPetsByStatus: "2025-08-07T13:20:03+01:00"
  findPetsByTags: "2025-08-07T13:20:03+01:00"
  getPetById: "2025-08-07T13:20:03+01:00"
  deletePet: "2025-08-07T13:20:03+01:00"
  uploadFile: "2025-08-07T13:20:03+01:00"
  getInventory: "2025-08-07T13:20:03+01:00"
  placeOrder: "2025-08-07T13:20:03+01:00"
  getOrderById: "2025-08-07T13:20:03+01:00"
  deleteOrder: "2025-08-07T13:20:03+01:00"
  createUser: "2025-08-07T13:20:03+01:00"
  createUsersWithListInput: "2025-08-07T13:20:03+01:00"
  loginUser: "2025-08-07T13:20:03+01:00"
  getUserByName: "2025-08-07T13:20:03+01:00"
  deleteUser: "2025-08-07T13:20:03+01:00"
